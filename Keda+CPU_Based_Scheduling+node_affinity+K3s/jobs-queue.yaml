apiVersion: batch/v1
kind: Job
metadata:
  name: posture-analyzer-0
  labels: { app: posture-queued }
spec:
  suspend: true
  ttlSecondsAfterFinished: 600
  template:
    metadata: { labels: { app: posture-queued } }
    spec:
      restartPolicy: Never
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - { key: posture/eligible, operator: In, values: ["true"] }
              - { key: kubernetes.io/hostname, operator: NotIn, values: ["localhost"] }
          preferredDuringSchedulingIgnoredDuringExecution:
          - { weight: 100, preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["1"] } ] } }
          - { weight: 50,  preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["2"] } ] } }
          - { weight: 10,  preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["3"] } ] } }
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector: { matchLabels: { app: posture-queued } }
      containers:
      - name: analyzer
        image: docker.io/shahroz90/posture-analyzer-pi1-0:latest
        imagePullPolicy: IfNotPresent
        command: ["python"]
        args: ["/app/Images_From_Pi1.py"]
        
---
apiVersion: batch/v1
kind: Job
metadata:
  name: posture-analyzer-1
  labels: { app: posture-queued }
spec:
  suspend: true
  ttlSecondsAfterFinished: 600
  template:
    metadata: { labels: { app: posture-queued } }
    spec:
      restartPolicy: Never
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - { key: posture/eligible, operator: In, values: ["true"] }
              - { key: kubernetes.io/hostname, operator: NotIn, values: ["localhost"] }
          preferredDuringSchedulingIgnoredDuringExecution:
          - { weight: 100, preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["1"] } ] } }
          - { weight: 50,  preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["2"] } ] } }
          - { weight: 10,  preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["3"] } ] } }
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector: { matchLabels: { app: posture-queued } }
      containers:
      - name: analyzer
        image: docker.io/shahroz90/posture-analyzer-pi1-1:latest
        imagePullPolicy: IfNotPresent
        command: ["python"]
        args: ["/app/Images_From_Pi1_1.py"]
        
---
apiVersion: batch/v1
kind: Job
metadata:
  name: posture-analyzer-2
  labels: { app: posture-queued }
spec:
  suspend: true
  ttlSecondsAfterFinished: 600
  template:
    metadata: { labels: { app: posture-queued } }
    spec:
      restartPolicy: Never
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - { key: posture/eligible, operator: In, values: ["true"] }
              - { key: kubernetes.io/hostname, operator: NotIn, values: ["localhost"] }
          preferredDuringSchedulingIgnoredDuringExecution:
          - { weight: 100, preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["1"] } ] } }
          - { weight: 50,  preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["2"] } ] } }
          - { weight: 10,  preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["3"] } ] } }
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector: { matchLabels: { app: posture-queued } }
      containers:
      - name: analyzer
        image: docker.io/shahroz90/posture-analyzer-pi1-2:latest
        imagePullPolicy: IfNotPresent
        command: ["python"]
        args: ["/app/Images_From_Pi1_2.py"]
        
---
apiVersion: batch/v1
kind: Job
metadata:
  name: posture-analyzer-3
  labels: { app: posture-queued }
spec:
  suspend: true
  ttlSecondsAfterFinished: 600
  template:
    metadata: { labels: { app: posture-queued } }
    spec:
      restartPolicy: Never
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - { key: posture/eligible, operator: In, values: ["true"] }
              - { key: kubernetes.io/hostname, operator: NotIn, values: ["localhost"] }
          preferredDuringSchedulingIgnoredDuringExecution:
          - { weight: 100, preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["1"] } ] } }
          - { weight: 50,  preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["2"] } ] } }
          - { weight: 10,  preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["3"] } ] } }
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector: { matchLabels: { app: posture-queued } }
      containers:
      - name: analyzer
        image: docker.io/shahroz90/posture-analyzer-pi1-3:latest
        imagePullPolicy: IfNotPresent
        command: ["python"]
        args: ["/app/Images_From_Pi1_3.py"]
        
---
apiVersion: batch/v1
kind: Job
metadata:
  name: posture-analyzer-4
  labels: { app: posture-queued }
spec:
  suspend: true
  ttlSecondsAfterFinished: 600
  template:
    metadata: { labels: { app: posture-queued } }
    spec:
      restartPolicy: Never
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - { key: posture/eligible, operator: In, values: ["true"] }
              - { key: kubernetes.io/hostname, operator: NotIn, values: ["localhost"] }
          preferredDuringSchedulingIgnoredDuringExecution:
          - { weight: 100, preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["1"] } ] } }
          - { weight: 50,  preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["2"] } ] } }
          - { weight: 10,  preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["3"] } ] } }
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector: { matchLabels: { app: posture-queued } }
      containers:
      - name: analyzer
        image: docker.io/shahroz90/posture-analyzer-pi1-4:latest
        imagePullPolicy: IfNotPresent
        command: ["python"]
        args: ["/app/Images_From_Pi1_4.py"]
       
---
apiVersion: batch/v1
kind: Job
metadata:
  name: posture-analyzer-5
  labels: { app: posture-queued }
spec:
  suspend: true
  ttlSecondsAfterFinished: 600
  template:
    metadata: { labels: { app: posture-queued } }
    spec:
      restartPolicy: Never
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - { key: posture/eligible, operator: In, values: ["true"] }
              - { key: kubernetes.io/hostname, operator: NotIn, values: ["localhost"] }
          preferredDuringSchedulingIgnoredDuringExecution:
          - { weight: 100, preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["1"] } ] } }
          - { weight: 50,  preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["2"] } ] } }
          - { weight: 10,  preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["3"] } ] } }
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector: { matchLabels: { app: posture-queued } }
      containers:
      - name: analyzer
        image: docker.io/shahroz90/posture-analyzer-pi1-5:latest
        imagePullPolicy: IfNotPresent
        command: ["python"]
        args: ["/app/Images_From_Pi1_5.py"]
        
---
apiVersion: batch/v1
kind: Job
metadata:
  name: posture-analyzer-6
  labels: { app: posture-queued }
spec:
  suspend: true
  ttlSecondsAfterFinished: 600
  template:
    metadata: { labels: { app: posture-queued } }
    spec:
      restartPolicy: Never
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - { key: posture/eligible, operator: In, values: ["true"] }
              - { key: kubernetes.io/hostname, operator: NotIn, values: ["localhost"] }
          preferredDuringSchedulingIgnoredDuringExecution:
          - { weight: 100, preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["1"] } ] } }
          - { weight: 50,  preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["2"] } ] } }
          - { weight: 10,  preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["3"] } ] } }
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector: { matchLabels: { app: posture-queued } }
      containers:
      - name: analyzer
        image: docker.io/shahroz90/posture-analyzer-pi1-6:latest
        imagePullPolicy: IfNotPresent
        command: ["python"]
        args: ["/app/Images_From_Pi1_6.py"]
        
---
apiVersion: batch/v1
kind: Job
metadata:
  name: posture-analyzer-7
  labels: { app: posture-queued }
spec:
  suspend: true
  ttlSecondsAfterFinished: 600
  template:
    metadata: { labels: { app: posture-queued } }
    spec:
      restartPolicy: Never
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - { key: posture/eligible, operator: In, values: ["true"] }
              - { key: kubernetes.io/hostname, operator: NotIn, values: ["localhost"] }
          preferredDuringSchedulingIgnoredDuringExecution:
          - { weight: 100, preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["1"] } ] } }
          - { weight: 50,  preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["2"] } ] } }
          - { weight: 10,  preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["3"] } ] } }
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector: { matchLabels: { app: posture-queued } }
      containers:
      - name: analyzer
        image: docker.io/shahroz90/posture-analyzer-pi1-7:latest
        imagePullPolicy: IfNotPresent
        command: ["python"]
        args: ["/app/Images_From_Pi1_7.py"]
       
---
apiVersion: batch/v1
kind: Job
metadata:
  name: posture-analyzer-8
  labels: { app: posture-queued }
spec:
  suspend: true
  ttlSecondsAfterFinished: 600
  template:
    metadata: { labels: { app: posture-queued } }
    spec:
      restartPolicy: Never
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - { key: posture/eligible, operator: In, values: ["true"] }
              - { key: kubernetes.io/hostname, operator: NotIn, values: ["localhost"] }
          preferredDuringSchedulingIgnoredDuringExecution:
          - { weight: 100, preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["1"] } ] } }
          - { weight: 50,  preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["2"] } ] } }
          - { weight: 10,  preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["3"] } ] } }
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector: { matchLabels: { app: posture-queued } }
      containers:
      - name: analyzer
        image: docker.io/shahroz90/posture-analyzer-pi1-8:latest
        imagePullPolicy: IfNotPresent
        command: ["python"]
        args: ["/app/Images_From_Pi1_8.py"]
       
---
apiVersion: batch/v1
kind: Job
metadata:
  name: posture-analyzer-9
  labels: { app: posture-queued }
spec:
  suspend: true
  ttlSecondsAfterFinished: 600
  template:
    metadata: { labels: { app: posture-queued } }
    spec:
      restartPolicy: Never
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - { key: posture/eligible, operator: In, values: ["true"] }
              - { key: kubernetes.io/hostname, operator: NotIn, values: ["localhost"] }
          preferredDuringSchedulingIgnoredDuringExecution:
          - { weight: 100, preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["1"] } ] } }
          - { weight: 50,  preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["2"] } ] } }
          - { weight: 10,  preference: { matchExpressions: [ { key: posture/rank, operator: In, values: ["3"] } ] } }
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector: { matchLabels: { app: posture-queued } }
      containers:
      - name: analyzer
        image: docker.io/shahroz90/posture-analyzer-pi1-9:latest
        imagePullPolicy: IfNotPresent
        command: ["python"]
        args: ["/app/Images_From_Pi1_9.py"]
       
